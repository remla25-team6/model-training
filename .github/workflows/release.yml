name: Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

env:
  PYTHON_VERSION: '3.12.3'

jobs:
  train-and-release:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Parse version from tag
        run: |
          VERSION=${GITHUB_REF:11}
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Download dataset
        run: python model-training/restaurant_sentiment/get_data.py

      - name: Preprocess data
        run: python model-training/restaurant_sentiment/preprocess.py

      - name: Train model
        run: python model-training/restaurant_sentiment/train.py

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}

      - name: Upload BoW vectorizer model
        uses: svenstaro/upload-release-action@v2
        with: 
          file: model/bow.pkl
          asset_name: bow-v${{ env.version }}.pkl
          tag: v${{ env.version }}

      - name: Upload model
        uses: svenstaro/upload-release-action@v2
        with: 
          file: model/model.pkl
          asset_name: model-v${{ env.version }}.pkl
          tag: v${{ env.version }}
      
      - name: Calculate pre-release version
        run: |
          VERSION=${version}
          MAJOR=$(echo "$VERSION" | cut -d . -f 1)
          MINOR=$(echo "$VERSION" | cut -d . -f 2)
          PATCH=$(echo "$VERSION" | cut -d . -f 3)
          PATCH=$((PATCH + 1))
          DATETIME=$(date +%Y%m%d.%H%M%S)
          PRE_RELEASE_VERSION="$MAJOR.$MINOR.$PATCH-pre.$DATETIME"
          echo "pre_release_version=$PRE_RELEASE_VERSION"  >> $GITHUB_ENV

      - name: Tag next pre-release version on main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ env.pre_release_version }}
          git push origin v${{ env.pre_release_version }}